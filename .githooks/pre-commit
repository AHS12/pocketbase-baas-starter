#!/bin/bash

# Pre-commit hook to run quick checks before committing
# This hook is called by "git commit" with no arguments.

echo "🔍 Running pre-commit checks..."

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Function to print colored output
print_status() {
    echo -e "${GREEN}✓${NC} $1"
}

print_error() {
    echo -e "${RED}✗${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}⚠${NC} $1"
}

# Check if we're in a Go project
if [ ! -f "go.mod" ]; then
    print_error "Not a Go project (go.mod not found)"
    exit 1
fi

# Get list of staged Go files
STAGED_GO_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.go$')

if [ -z "$STAGED_GO_FILES" ]; then
    print_status "No Go files staged for commit"
    exit 0
fi

echo "📝 Checking staged Go files..."

# Check formatting of staged files
echo "🔧 Checking code formatting..."
for file in $STAGED_GO_FILES; do
    if [ -f "$file" ]; then
        if ! gofmt -l "$file" | grep -q "^$"; then
            print_error "File $file is not properly formatted"
            echo "💡 Run 'gofmt -w $file' or 'make format' to fix"
            exit 1
        fi
    fi
done
print_status "Code formatting is correct"

# Run go vet on staged files (if possible)
echo "🔍 Running go vet..."
if ! go vet ./...; then
    print_error "go vet found issues in staged files"
    exit 1
fi
print_status "go vet passed"

# Quick syntax check
echo "📋 Checking syntax..."
for file in $STAGED_GO_FILES; do
    if [ -f "$file" ]; then
        if ! go build -o /dev/null "$file" 2>/dev/null; then
            # If single file build fails, try building the package
            package_dir=$(dirname "$file")
            if ! go build -o /dev/null "./$package_dir" 2>/dev/null; then
                print_error "Syntax error in $file"
                exit 1
            fi
        fi
    fi
done
print_status "Syntax check passed"

echo -e "${GREEN}🎉 Pre-commit checks passed!${NC}"
exit 0